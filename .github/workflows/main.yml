# name: Handle Issues
# # trigger
# on: 
#   issues:
#       types: [opened, reopened]
#   # Define the event here
# jobs:
#   handle-issue:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         # actions/checkout
#         uses: actions/checkout@v4
#       - name: Print Issue Information
#         env:
#           ISSUE_NUMBER: ${{ github.event.issue.number }}
#           ISSUE_TITLE: ${{ github.event.issue.title }}
#           ISSUE_BODY: ${{ github.event.issue.body }}
#           ISSUE_ASSIGNEES: ${{ join(github.event.issue.assignees.*.login, ', ') }}
#           ISSUE_LABELS: ${{ join(github.event.issue.labels.*.name, ', ') }}
          
#         run: |
#           ISSUE_RESPONSE=$(curl -s https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER)
#           ECHO "Issue Title: ${ISSUE_TITLE}"
#           echo "Issue Number: ${ISSUE_NUMBER}"
#           echo "Issue Body: ${ISSUE_BODY}"
#           echo "Issue Assignees: ${ISSUE_ASSIGNEES}"
#           echo "Issue Labels: ${ISSUE_LABELS}"          
#          echo "Issue Information: $ISSUE_RESPONSE"
  
      # - name: Greeting Message
      #   # Write the command here
      #   run: echo "Hello, World"

name: Auto_Coder
on:
  issues:    
    types: [opened, reopened, labeled] 
    
jobs: 
  access_issue_info:  
    if: ${{ (github.event.action == 'labeled' && github.event.label.name == 'autocoder-bot') || (github.event.action != 'labeled' && contains(join(github.event.issue.labels.*.name, ','), 'autocoder-bot')) }} 
    runs-on: ubuntu-latest    
    steps:    
      - name: Checkout repository        
        uses: actions/checkout@v4
      
      - name: Debug - List Repo Contents        
        run: ls -R       
      
      - name: Set permissions for  script.sh  
        run: chmod +x scripts/script.sh      
        
      - name: Run  script.sh     
        env:   
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
          REPOSITORY: ${{ github.repository }}        
          ISSUE_NUMBER: ${{ github.event.issue.number }}      
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}     
        run: |          
          ./scripts/script.sh "$GITHUB_TOKEN" "$REPOSITORY" "$ISSUE_NUMBER" "$OPENAI_API_KEY"     
        
      - name: Upload generated files as Artifact       
        uses: actions/upload-artifact@v4        
        with:       
          name: autocoder-artifact          
          path: autocoder-bot/            
      
      - name: Download  artifacts       
        uses: actions/download-artifact@v4        
        with:          
          name: autocoder-artifact          
          path: autocoder-artifact/      
        
      - name: List files in the artifact       
        run: ls -R autocoder-artifact/
